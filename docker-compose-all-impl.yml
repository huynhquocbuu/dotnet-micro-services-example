version: '3.9'
services:
  #---
  product-api:
    container_name: product-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - product-db-mysql
    networks:
      - mcr-srv-practice.service.net
      - mcr-srv-practice.infra.net
    ports:
      - "5001:80"
    restart: always
  #---
  customer-api:
    container_name: customer-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - customer-db-postgres
    networks:
      - mcr-srv-practice.service.net
      - mcr-srv-practice.infra.net
    ports:
      - "5002:80"
    restart: always
  #---
  basket-api:
    container_name: basket-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - basket-db-redis
      - queue-message-rabbitmq
    networks:
      - mcr-srv-practice.service.net
      - mcr-srv-practice.infra.net
    ports:
      - "5003:80"
    restart: always
  #---
  ordering-api:
    container_name: ordering-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - ordering-db-azure-edge
      - queue-message-rabbitmq
    networks:
      - mcr-srv-practice.service.net
      - mcr-srv-practice.infra.net
    ports:
      - "5004:80"
    restart: always
  
  #infra section
  #---
  product-db-mysql:
    container_name: product-db-mysql
    environment:
      MYSQL_ROOT_PASSWORD: Password123
      MYSQL_TCP_PORT: 3306
      MYSQL_DATABASE: ProductDB
    restart: always
    volumes:
      - product-db-data:/var/lib/mysql
    networks:
      - mcr-srv-practice.infra.net
  #---
  customer-db-postgres:
    container_name: customer-db-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password123
    restart: always
    volumes:
      - customer-db-data:/var/lib/postgresql/data
    networks:
      - mcr-srv-practice.infra.net
  #---
  basket-db-redis:
    container_name: basket-db-redis
    restart: always
    networks:
      - mcr-srv-practice.infra.net
  #---
  ordering-db-azure-edge:
    container_name: ordering-db-azure-edge
    restart: always
    environment:
      MSSQL_SA_PASSWORD: Password123
      ACCEPT_EULA: Y
    volumes:
      - ordering-db-data:/var/opt/mssql  
    networks:
      - mcr-srv-practice.infra.net
  #---
  queue-message-rabbitmq:
    container_name: queue-message-rabbitmq
    restart: always
    #ports:
      #- "5672:5672"
      #- "15672:15672"
    networks:
      - mcr-srv-practice.infra.net